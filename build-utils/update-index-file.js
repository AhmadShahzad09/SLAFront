const fs = require('fs')
const path = require('path')
const componentNames = require('./component-names')
const components = componentNames.filter(e => !e.name.includes('.'))
const versionPackage = require('../package.json')

const indexFileContent = `\
// This file is automatically generated by actions/build-index.js
// Please, do NOT update this file directly

// Addons
import locale from '../addons/locale'
import OdsCollapseTransition from '../addons/transitions/collapse-transition.js'

// ODS Components
${components
    .map(componentName => `import Ods${componentName.name} from './${componentName.folder}/${componentName.name}'`)
    .join('\n')}

// What should happen if the user installs the library as a plugin
function install (Vue, opts = {}) {
${components
    .map(componentName => `  Vue.component('Ods${componentName.name}', Ods${componentName.name})`)
    .join('\n')}
  Vue.component('OdsCollapseTransition', OdsCollapseTransition)

  locale.use(opts.locale)
  locale.i18n(opts.i18n)

  Vue.use(OdsLoading.directive)
  Vue.directive(OdsInfiniteScroll.name, OdsInfiniteScroll)

  Vue.prototype.$ONESAITDS = {
    size: opts.size || '',
    zIndex: opts.zIndex || 2000
  }

  Vue.prototype.$loading = OdsLoading.service
  Vue.prototype.$msgbox = OdsMessageBox
  Vue.prototype.$alert = OdsMessageBox.alert
  Vue.prototype.$confirm = OdsMessageBox.confirm
  Vue.prototype.$prompt = OdsMessageBox.prompt
  Vue.prototype.$notify = OdsNotification
  Vue.prototype.$message = OdsMessage
}

export default {
  version: '${versionPackage.version}',
  install,
  locale: locale.use,
  i18n: locale.i18n,
  ${components.map(componentName => `Ods${componentName.name}`).join(',\n  ')},
  OdsCollapseTransition,
  OdsLoading
}
`

fs.writeFileSync(path.resolve(__dirname, '../src/components/index.js'), indexFileContent)
